$date
	Wed Jul 26 23:28:21 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module riscv_tb $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$scope module core $end
$var wire 1 ! clk $end
$var wire 1 # overflow $end
$var wire 1 " rst $end
$var wire 1 $ select $end
$var wire 1 % zero $end
$var wire 32 & writedata [31:0] $end
$var wire 32 ' sumB [31:0] $end
$var wire 32 ( sumA [31:0] $end
$var wire 1 ) regwrite $end
$var wire 32 * readdata [31:0] $end
$var wire 32 + pc [31:0] $end
$var wire 32 , newpc [31:0] $end
$var wire 32 - mux_out [31:0] $end
$var wire 1 . memwrite $end
$var wire 1 / memtoreg $end
$var wire 1 0 memread $end
$var wire 32 1 instruction [31:0] $end
$var wire 32 2 immediate [31:0] $end
$var wire 1 3 branch $end
$var wire 32 4 b [31:0] $end
$var wire 1 5 alusrc $end
$var wire 2 6 aluop [1:0] $end
$var wire 4 7 aluctl [3:0] $end
$var wire 32 8 alu_out [31:0] $end
$var wire 32 9 a [31:0] $end
$scope module adder $end
$var wire 32 : in2 [31:0] $end
$var wire 32 ; out [31:0] $end
$var wire 32 < in1 [31:0] $end
$upscope $end
$scope module adder2 $end
$var wire 32 = out [31:0] $end
$var wire 32 > in2 [31:0] $end
$var wire 32 ? in1 [31:0] $end
$upscope $end
$scope module alu $end
$var wire 1 # overflow $end
$var wire 1 % zero $end
$var wire 32 @ b [31:0] $end
$var wire 4 A aluctl [3:0] $end
$var wire 32 B a [31:0] $end
$var reg 32 C out [31:0] $end
$upscope $end
$scope module alucon $end
$var wire 3 D func3 [2:0] $end
$var wire 7 E func7 [6:0] $end
$var wire 2 F aluop [1:0] $end
$var reg 4 G aluctl [3:0] $end
$upscope $end
$scope module datamem $end
$var wire 10 H address [9:0] $end
$var wire 1 ! clk $end
$var wire 32 I writedata [31:0] $end
$var wire 32 J readdata [31:0] $end
$var wire 1 . memwrite $end
$var wire 1 0 memread $end
$upscope $end
$scope module immgen $end
$var wire 32 K instruction [31:0] $end
$var reg 32 L result [31:0] $end
$upscope $end
$scope module insmem $end
$var wire 32 M pc [31:0] $end
$var wire 32 N instruction [31:0] $end
$upscope $end
$scope module maincon $end
$var wire 7 O opcode [6:0] $end
$var reg 2 P aluop [1:0] $end
$var reg 1 5 alusrc $end
$var reg 1 3 branch $end
$var reg 1 0 memread $end
$var reg 1 / memtoreg $end
$var reg 1 . memwrite $end
$var reg 1 ) regwrite $end
$upscope $end
$scope module mux1 $end
$var wire 32 Q in1 [31:0] $end
$var wire 32 R in2 [31:0] $end
$var wire 1 $ s $end
$var wire 32 S out [31:0] $end
$upscope $end
$scope module mux2 $end
$var wire 32 T in2 [31:0] $end
$var wire 1 5 s $end
$var wire 32 U out [31:0] $end
$var wire 32 V in1 [31:0] $end
$upscope $end
$scope module mux3 $end
$var wire 32 W in1 [31:0] $end
$var wire 32 X in2 [31:0] $end
$var wire 1 / s $end
$var wire 32 Y out [31:0] $end
$upscope $end
$scope module pcmod $end
$var wire 1 ! clk $end
$var wire 32 Z in [31:0] $end
$var wire 1 " rst $end
$var reg 32 [ out [31:0] $end
$upscope $end
$scope module regfile $end
$var wire 1 ! clk $end
$var wire 5 \ rd [4:0] $end
$var wire 32 ] readdata1 [31:0] $end
$var wire 32 ^ readdata2 [31:0] $end
$var wire 1 ) regwrite $end
$var wire 5 _ rs1 [4:0] $end
$var wire 5 ` rs2 [4:0] $end
$var wire 32 a writedata [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
b100 :
bx 9
bx 8
bx 7
bx 6
x5
bx 4
x3
bx 2
bx 1
x0
x/
x.
bx -
bx ,
bx +
bx *
x)
bx (
bx '
bx &
x%
x$
z#
x"
0!
$end
#1
b0 *
b0 J
b0 X
0$
b1 &
b1 Y
b1 a
b1 H
b1 -
b1 @
b1 U
b100 ,
b100 S
b100 Z
b0 6
b0 F
b0 P
15
0/
1)
00
0.
03
0%
b1 8
b1 C
b1 W
b10 7
b10 A
b10 G
b1 '
b1 =
b1 R
b1 2
b1 ?
b1 L
b1 T
b10011 O
b0 D
b1010 \
b0 9
b0 B
b0 ]
b0 _
b0 E
b1 `
b100000000010100010011 1
b100000000010100010011 K
b100000000010100010011 N
b100 (
b100 ;
b100 Q
b0 +
b0 <
b0 >
b0 M
b0 [
1"
1!
#2
0"
0!
#3
b10 &
b10 Y
b10 a
b10 H
b10 8
b10 C
b10 W
b1011 \
b1 9
b1 B
b1 ]
b1010 _
b1000 ,
b1000 S
b1000 Z
b101010000010110010011 1
b101010000010110010011 K
b101010000010110010011 N
b101 '
b101 =
b101 R
b1000 (
b1000 ;
b1000 Q
b100 +
b100 <
b100 >
b100 M
b100 [
1!
#4
0!
#5
b11111111111111111111111111111111 &
b11111111111111111111111111111111 Y
b11111111111111111111111111111111 a
b1111111111 H
b11111111111111111111111111111111 8
b11111111111111111111111111111111 C
b11111111111111111111111111111111 W
b110 7
b110 A
b110 G
b10 -
b10 @
b10 U
b1 6
b1 F
b1 P
05
0)
13
b110100 2
b110100 ?
b110100 L
b110100 T
b1100011 O
b10100 \
b10 4
b10 I
b10 V
b10 ^
b1011 `
b1 E
b1100 ,
b1100 S
b1100 Z
b10101101010000101001100011 1
b10101101010000101001100011 K
b10101101010000101001100011 N
b111100 '
b111100 =
b111100 R
b1100 (
b1100 ;
b1100 Q
b1000 +
b1000 <
b1000 >
b1000 M
b1000 [
1!
#6
0!
#7
b10 7
b10 A
b10 G
b11 &
b11 Y
b11 a
b11 H
0%
b11 8
b11 C
b11 W
b0 6
b0 F
b0 P
15
1)
03
b10 2
b10 ?
b10 L
b10 T
b10 -
b10 @
b10 U
b10011 O
b1100 \
bx 4
bx I
bx V
bx ^
b10 `
b0 E
b10000 ,
b10000 S
b10000 Z
b1001010000011000010011 1
b1001010000011000010011 K
b1001010000011000010011 N
b1110 '
b1110 =
b1110 R
b10000 (
b10000 ;
b10000 Q
b1100 +
b1100 <
b1100 >
b1100 M
b1100 [
1!
#8
0!
#9
1%
b0 &
b0 Y
b0 a
b0 H
b0 -
b0 @
b0 U
b0 8
b0 C
b0 W
b0 2
b0 ?
b0 L
b0 T
b0 \
b0 4
b0 I
b0 V
b0 ^
b0 `
b0 9
b0 B
b0 ]
b0 _
b10100 ,
b10100 S
b10100 Z
b10011 1
b10011 K
b10011 N
b10000 '
b10000 =
b10000 R
b10100 (
b10100 ;
b10100 Q
b10000 +
b10000 <
b10000 >
b10000 M
b10000 [
1!
#10
0!
#11
0)
1.
b100011 O
b10 D
b1 4
b1 I
b1 V
b1 ^
b1010 `
b11000 ,
b11000 S
b11000 Z
b101000000010000000100011 1
b101000000010000000100011 K
b101000000010000000100011 N
b10100 '
b10100 =
b10100 R
b11000 (
b11000 ;
b11000 Q
b10100 +
b10100 <
b10100 >
b10100 M
b10100 [
1!
#12
0!
#13
1)
0.
b10011 O
b0 D
b0 4
b0 I
b0 V
b0 ^
b0 `
b11100 ,
b11100 S
b11100 Z
b10011 1
b10011 K
b10011 N
b11000 '
b11000 =
b11000 R
b11100 (
b11100 ;
b11100 Q
b11000 +
b11000 <
b11000 >
b11000 M
b11000 [
1!
#14
0!
#15
b100 &
b100 Y
b100 a
b100 H
b11 -
b11 @
b11 U
0%
b100 8
b100 C
b100 W
b11 2
b11 ?
b11 L
b11 T
b1101 \
bx 4
bx I
bx V
bx ^
b11 `
b1 9
b1 B
b1 ]
b1010 _
b100000 ,
b100000 S
b100000 Z
b1101010000011010010011 1
b1101010000011010010011 K
b1101010000011010010011 N
b11111 '
b11111 =
b11111 R
b100000 (
b100000 ;
b100000 Q
b11100 +
b11100 <
b11100 >
b11100 M
b11100 [
1!
#16
0!
#17
b110 &
b110 Y
b110 a
b110 H
b10 -
b10 @
b10 U
b10 6
b10 F
b10 P
05
b110 8
b110 C
b110 W
b0 2
b0 ?
b0 L
b0 T
b110011 O
b1110 \
b10 4
b10 I
b10 V
b10 ^
b1011 `
b100 9
b100 B
b100 ]
b1101 _
b100100 ,
b100100 S
b100100 Z
b101101101000011100110011 1
b101101101000011100110011 K
b101101101000011100110011 N
b100000 '
b100000 =
b100000 R
b100100 (
b100100 ;
b100100 Q
b100000 +
b100000 <
b100000 >
b100000 M
b100000 [
1!
#18
0!
#19
b0 6
b0 F
b0 P
15
b110 8
b110 C
b110 W
b0 -
b0 @
b0 U
b1111 \
b10011 O
b0 4
b0 I
b0 V
b0 ^
b0 `
b110 9
b110 B
b110 ]
b1110 _
b101000 ,
b101000 S
b101000 Z
b1110000011110010011 1
b1110000011110010011 K
b1110000011110010011 N
b100100 '
b100100 =
b100100 R
b101000 (
b101000 ;
b101000 Q
b100100 +
b100100 <
b100100 >
b100100 M
b100100 [
1!
#20
0!
#21
b100 &
b100 Y
b100 a
b100 H
b100 8
b100 C
b100 W
b110 7
b110 A
b110 G
b10 -
b10 @
b10 U
b10 6
b10 F
b10 P
05
b110011 O
b10000 \
b1111 _
b10 4
b10 I
b10 V
b10 ^
b1011 `
b100000 E
b101100 ,
b101100 S
b101100 Z
b1000000101101111000100000110011 1
b1000000101101111000100000110011 K
b1000000101101111000100000110011 N
b101000 '
b101000 =
b101000 R
b101100 (
b101100 ;
b101100 Q
b101000 +
b101000 <
b101000 >
b101000 M
b101000 [
1!
#22
0!
#23
b0 6
b0 F
b0 P
15
b100 8
b100 C
b100 W
b10 7
b10 A
b10 G
b0 -
b0 @
b0 U
b10001 \
b10011 O
b0 4
b0 I
b0 V
b0 ^
b0 `
b100 9
b100 B
b100 ]
b10000 _
b0 E
b110000 ,
b110000 S
b110000 Z
b10000000100010010011 1
b10000000100010010011 K
b10000000100010010011 N
b101100 '
b101100 =
b101100 R
b110000 (
b110000 ;
b110000 Q
b101100 +
b101100 <
b101100 >
b101100 M
b101100 [
1!
#24
0!
#25
b0 &
b0 Y
b0 a
b0 H
0)
1.
1%
b0 8
b0 C
b0 W
b100011 O
b10 D
b0 \
b10 4
b10 I
b10 V
b10 ^
b1011 `
b0 9
b0 B
b0 ]
b0 _
b110100 ,
b110100 S
b110100 Z
b101100000010000000100011 1
b101100000010000000100011 K
b101100000010000000100011 N
b110000 '
b110000 =
b110000 R
b110100 (
b110100 ;
b110100 Q
b110000 +
b110000 <
b110000 >
b110000 M
b110000 [
1!
#26
0!
#27
1)
0.
b10011 O
b0 D
b0 4
b0 I
b0 V
b0 ^
b0 `
b111000 ,
b111000 S
b111000 Z
b10011 1
b10011 K
b10011 N
b110100 '
b110100 =
b110100 R
b111000 (
b111000 ;
b111000 Q
b110100 +
b110100 <
b110100 >
b110100 M
b110100 [
1!
#28
0!
#29
b100 &
b100 Y
b100 a
b100 H
0%
b100 8
b100 C
b100 W
b100 -
b100 @
b100 U
0)
1.
b100 2
b100 ?
b100 L
b100 T
b100011 O
b10 D
b100 \
b11 4
b11 I
b11 V
b11 ^
b1100 `
b111100 ,
b111100 S
b111100 Z
b110000000010001000100011 1
b110000000010001000100011 K
b110000000010001000100011 N
b111100 '
b111100 =
b111100 R
b111100 (
b111100 ;
b111100 Q
b111000 +
b111000 <
b111000 >
b111000 M
b111000 [
1!
#30
0!
#31
b0 &
b0 Y
b0 a
b0 H
1%
b0 8
b0 C
b0 W
b0 -
b0 @
b0 U
1)
0.
b0 2
b0 ?
b0 L
b0 T
b10011 O
b0 D
b0 \
b0 4
b0 I
b0 V
b0 ^
b0 `
b1000000 ,
b1000000 S
b1000000 Z
b10011 1
b10011 K
b10011 N
b111100 '
b111100 =
b111100 R
b1000000 (
b1000000 ;
b1000000 Q
b111100 +
b111100 <
b111100 >
b111100 M
b111100 [
1!
#32
0!
#33
b100 H
0%
b100 8
b100 C
b100 W
b11 &
b11 Y
b11 a
b11 *
b11 J
b11 X
b100 -
b100 @
b100 U
1/
10
b100 2
b100 ?
b100 L
b100 T
b11 O
b10 D
b10010 \
bx 4
bx I
bx V
bx ^
b100 `
b1000100 ,
b1000100 S
b1000100 Z
b10000000010100100000011 1
b10000000010100100000011 K
b10000000010100100000011 N
b1000100 '
b1000100 =
b1000100 R
b1000100 (
b1000100 ;
b1000100 Q
b1000000 +
b1000000 <
b1000000 >
b1000000 M
b1000000 [
1!
#34
0!
#35
b0 H
1%
b0 8
b0 C
b0 W
b0 &
b0 Y
b0 a
b0 *
b0 J
b0 X
b0 -
b0 @
b0 U
0/
00
b0 2
b0 ?
b0 L
b0 T
b10011 O
b0 D
b0 \
b0 4
b0 I
b0 V
b0 ^
b0 `
b1001000 ,
b1001000 S
b1001000 Z
b10011 1
b10011 K
b10011 N
b1000100 '
b1000100 =
b1000100 R
b1001000 (
b1001000 ;
b1001000 Q
b1000100 +
b1000100 <
b1000100 >
b1000100 M
b1000100 [
1!
#36
0!
#37
b11 &
b11 Y
b11 a
b11 H
0%
b11 8
b11 C
b11 W
b10011 \
b11 9
b11 B
b11 ]
b10010 _
b1001100 ,
b1001100 S
b1001100 Z
b10010000100110010011 1
b10010000100110010011 K
b10010000100110010011 N
b1001000 '
b1001000 =
b1001000 R
b1001100 (
b1001100 ;
b1001100 Q
b1001000 +
b1001000 <
b1001000 >
b1001000 M
b1001000 [
1!
#38
0!
#39
b0 7
b0 A
b0 G
b11 -
b11 @
b11 U
b1 &
b1 Y
b1 a
b1 H
b10 6
b10 F
b10 P
05
b1 8
b1 C
b1 W
b110011 O
b111 D
b10100 \
b1 9
b1 B
b1 ]
b1010 _
b11 4
b11 I
b11 V
b11 ^
b10010 `
b1010000 ,
b1010000 S
b1010000 Z
b1001001010111101000110011 1
b1001001010111101000110011 K
b1001001010111101000110011 N
b1001100 '
b1001100 =
b1001100 R
b1010000 (
b1010000 ;
b1010000 Q
b1001100 +
b1001100 <
b1001100 >
b1001100 M
b1001100 [
1!
#40
0!
#41
b1 &
b1 Y
b1 a
b1 H
0%
b1 8
b1 C
b1 W
b0 6
b0 F
b0 P
15
b10 7
b10 A
b10 G
b0 -
b0 @
b0 U
b10011 O
b0 D
b10111 \
b10100 _
b0 4
b0 I
b0 V
b0 ^
b0 `
b1010100 ,
b1010100 S
b1010100 Z
b10100000101110010011 1
b10100000101110010011 K
b10100000101110010011 N
b1010000 '
b1010000 =
b1010000 R
b1010100 (
b1010100 ;
b1010100 Q
b1010000 +
b1010000 <
b1010000 >
b1010000 M
b1010000 [
1!
#42
0!
#43
b1 7
b1 A
b1 G
b100 -
b100 @
b100 U
b110 &
b110 Y
b110 a
b110 H
b10 6
b10 F
b10 P
05
b110 8
b110 C
b110 W
b110011 O
b110 D
b10101 \
b10 9
b10 B
b10 ]
b1011 _
b100 4
b100 I
b100 V
b100 ^
b10000 `
b1011000 ,
b1011000 S
b1011000 Z
b1000001011110101010110011 1
b1000001011110101010110011 K
b1000001011110101010110011 N
b1010100 '
b1010100 =
b1010100 R
b1011000 (
b1011000 ;
b1011000 Q
b1010100 +
b1010100 <
b1010100 >
b1010100 M
b1010100 [
1!
#44
0!
#45
b0 6
b0 F
b0 P
15
b10 7
b10 A
b10 G
b0 -
b0 @
b0 U
b10011 O
b0 D
b11000 \
b110 9
b110 B
b110 ]
b10101 _
b0 4
b0 I
b0 V
b0 ^
b0 `
b1011100 ,
b1011100 S
b1011100 Z
b10101000110000010011 1
b10101000110000010011 K
b10101000110000010011 N
b1011000 '
b1011000 =
b1011000 R
b1011100 (
b1011100 ;
b1011100 Q
b1011000 +
b1011000 <
b1011000 >
b1011000 M
b1011000 [
1!
#46
0!
#47
b10 &
b10 Y
b10 a
b10 H
b10 8
b10 C
b10 W
b1100 7
b1100 A
b1100 G
b100 -
b100 @
b100 U
b10 6
b10 F
b10 P
05
b110011 O
b100 D
b10110 \
b1110 _
b100 4
b100 I
b100 V
b100 ^
b10001 `
b1100000 ,
b1100000 S
b1100000 Z
b1000101110100101100110011 1
b1000101110100101100110011 K
b1000101110100101100110011 N
b1011100 '
b1011100 =
b1011100 R
b1100000 (
b1100000 ;
b1100000 Q
b1011100 +
b1011100 <
b1011100 >
b1011100 M
b1011100 [
1!
#48
0!
#49
b0 6
b0 F
b0 P
15
b10 7
b10 A
b10 G
b0 -
b0 @
b0 U
b10011 O
b0 D
b11001 \
b10 9
b10 B
b10 ]
b10110 _
b0 4
b0 I
b0 V
b0 ^
b0 `
b1100100 ,
b1100100 S
b1100100 Z
b10110000110010010011 1
b10110000110010010011 K
b10110000110010010011 N
b1100000 '
b1100000 =
b1100000 R
b1100100 (
b1100100 ;
b1100100 Q
b1100000 +
b1100000 <
b1100000 >
b1100000 M
b1100000 [
1!
#50
0!
#51
b0 &
b0 Y
b0 a
b0 H
1%
b0 8
b0 C
b0 W
b0 \
b0 9
b0 B
b0 ]
b0 _
b1101000 ,
b1101000 S
b1101000 Z
b10011 1
b10011 K
b10011 N
b1100100 '
b1100100 =
b1100100 R
b1101000 (
b1101000 ;
b1101000 Q
b1100100 +
b1100100 <
b1100100 >
b1100100 M
b1100100 [
1!
#52
0!
#53
b100 H
0%
b100 8
b100 C
b100 W
b11 &
b11 Y
b11 a
b11 *
b11 J
b11 X
b100 -
b100 @
b100 U
1/
10
b100 2
b100 ?
b100 L
b100 T
b11 O
b10 D
b11010 \
bx 4
bx I
bx V
bx ^
b100 `
b1101100 ,
b1101100 S
b1101100 Z
b10000000010110100000011 1
b10000000010110100000011 K
b10000000010110100000011 N
b1101100 '
b1101100 =
b1101100 R
b1101100 (
b1101100 ;
b1101100 Q
b1101000 +
b1101000 <
b1101000 >
b1101000 M
b1101000 [
1!
#54
0!
#55
1$
1%
b110 7
b110 A
b110 G
b0 &
b0 Y
b0 a
b0 *
b0 J
b0 X
b0 H
b11 -
b11 @
b11 U
b1 6
b1 F
b1 P
05
0/
0)
00
13
b0 8
b0 C
b0 W
b1001000 2
b1001000 ?
b1001000 L
b1001000 T
b1100011 O
b0 D
b1000 \
b11 9
b11 B
b11 ]
b11010 _
b10 E
b11 4
b11 I
b11 V
b11 ^
b11010 `
b10110100 ,
b10110100 S
b10110100 Z
b101101011010000010001100011 1
b101101011010000010001100011 K
b101101011010000010001100011 N
b10110100 '
b10110100 =
b10110100 R
b1110000 (
b1110000 ;
b1110000 Q
b1101100 +
b1101100 <
b1101100 >
b1101100 M
b1101100 [
1!
#56
0!
#57
b10 7
b10 A
b10 G
0$
b1 &
b1 Y
b1 a
b1 H
b0 6
b0 F
b0 P
15
1)
03
0%
b1 8
b1 C
b1 W
b0 2
b0 ?
b0 L
b0 T
b0 -
b0 @
b0 U
b10011 O
b1010 \
b1 9
b1 B
b1 ]
b1010 _
b0 E
b0 4
b0 I
b0 V
b0 ^
b0 `
b10111000 ,
b10111000 S
b10111000 Z
b1010000010100010011 1
b1010000010100010011 K
b1010000010100010011 N
b10110100 '
b10110100 =
b10110100 R
b10111000 (
b10111000 ;
b10111000 Q
b10110100 +
b10110100 <
b10110100 >
b10110100 M
b10110100 [
1!
#58
0!
#59
b10 &
b10 Y
b10 a
b10 H
b10 8
b10 C
b10 W
b1011 \
b10 9
b10 B
b10 ]
b1011 _
b10111100 ,
b10111100 S
b10111100 Z
b1011000010110010011 1
b1011000010110010011 K
b1011000010110010011 N
b10111000 '
b10111000 =
b10111000 R
b10111100 (
b10111100 ;
b10111100 Q
b10111000 +
b10111000 <
b10111000 >
b10111000 M
b10111000 [
1!
#60
0!
#61
b11 &
b11 Y
b11 a
b11 H
b11 8
b11 C
b11 W
b1100 \
b11 9
b11 B
b11 ]
b1100 _
b11000000 ,
b11000000 S
b11000000 Z
b1100000011000010011 1
b1100000011000010011 K
b1100000011000010011 N
b10111100 '
b10111100 =
b10111100 R
b11000000 (
b11000000 ;
b11000000 Q
b10111100 +
b10111100 <
b10111100 >
b10111100 M
b10111100 [
1!
#62
0!
#63
b100 &
b100 Y
b100 a
b100 H
b100 8
b100 C
b100 W
b1101 \
b100 9
b100 B
b100 ]
b1101 _
b11000100 ,
b11000100 S
b11000100 Z
b1101000011010010011 1
b1101000011010010011 K
b1101000011010010011 N
b11000000 '
b11000000 =
b11000000 R
b11000100 (
b11000100 ;
b11000100 Q
b11000000 +
b11000000 <
b11000000 >
b11000000 M
b11000000 [
1!
#64
0!
#65
bx -
bx @
bx U
bx &
bx Y
bx a
bx H
05
0)
x%
bx 8
bx C
bx W
bx O
bx D
bx \
bx 9
bx B
bx ]
bx _
bx E
bx 4
bx I
bx V
bx ^
bx `
b11001000 ,
b11001000 S
b11001000 Z
bx 1
bx K
bx N
b11000100 '
b11000100 =
b11000100 R
b11001000 (
b11001000 ;
b11001000 Q
b11000100 +
b11000100 <
b11000100 >
b11000100 M
b11000100 [
1!
#66
0!
#67
b11001100 ,
b11001100 S
b11001100 Z
b11001000 '
b11001000 =
b11001000 R
b11001100 (
b11001100 ;
b11001100 Q
b11001000 +
b11001000 <
b11001000 >
b11001000 M
b11001000 [
1!
#68
0!
#69
b11010000 ,
b11010000 S
b11010000 Z
b11001100 '
b11001100 =
b11001100 R
b11010000 (
b11010000 ;
b11010000 Q
b11001100 +
b11001100 <
b11001100 >
b11001100 M
b11001100 [
1!
#70
0!
#71
b11010100 ,
b11010100 S
b11010100 Z
b11010000 '
b11010000 =
b11010000 R
b11010100 (
b11010100 ;
b11010100 Q
b11010000 +
b11010000 <
b11010000 >
b11010000 M
b11010000 [
1!
#72
0!
